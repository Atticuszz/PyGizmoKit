name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:


jobs:
  test:
    name: Test / OS ${{ matrix.os }} / Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ ubuntu-latest , windows-latest]
        python-version: [ "3.10", "3.11" ,"3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.4.0
        with:
          poetry-version: 1.7.1

      - name: Run Tests
        run: poetry run tests

#      - name: Upload Coverage
#        uses: codecov/codecov-action@v1

  publish:
    needs: test
    if: ${{ !startsWith(github.event.head_commit.message, 'bump') && !startsWith(github.event.head_commit.message, 'chore') && github.ref == 'refs/heads/main' && github.event_name == 'push' && github.repository_owner == 'Atticuszz' }}
    runs-on: ubuntu-latest
    name: "Bump version, create changelog and publish"
    environment:
      name: pypi
      url: https://pypi.org/project/pygizmokit/
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # needed for GitHub actions bot to write to repo
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          token: ${{ secrets.ATTICUS_PAT }}
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.4.0
        with:
          poetry-version: 1.7.1
      - name: Configure PyPI token
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and Publish to PyPI
        run: poetry publish --build

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
